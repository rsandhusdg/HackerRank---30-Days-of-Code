Objective
Today, we're delving into Inheritance. Check out the attached tutorial for learning materials and an instructional video.

Task
You are given two classes, Person and Student, where Person is the base class and Student is the derived class. Completed code for Person and a declaration for Student are provided for you in the editor. Observe that Student inherits all the properties of Person.

Complete the Student class by writing the following:

A Student class constructor, which has 4 parameters:

A string, firstName.
A string, lastName.
An integer, idNumber.
An integer array (or vector) of test scores, scores.
A char calculate() method that calculates a Student object's average and returns the grade character representative of their calculated average:

Grading Scale

Letter  Average
O       90<+a<=100
E       80<=a<=90
A       70<=a<=80
P       55<=a<=70
D       40<=a<=55
T       a<40

Input Format

The locked stub code in the editor reads the input and calls the Student class constructor with the necessary arguments. 
It also calls the calculate method which takes no arguments.

The first line contains firstName, lastName, and idNumber, separated by a space. The second line contains the number of test scores. 
The third line of space-separated integers describes scores.

Constraints
1<=length of firstName, length of lastName<=10
length of idNumber=7
0<=score,=100

Output Format
Output is handled by the locked stub code. Your output will be correct if your Student class constructor and calculate() method are properly implemented.

Sample Input

Heraldo Memelli 8135627
2
100 80

Sample Output

 Name: Memelli, Heraldo
 ID: 8135627
 Grade: O

Explanation

This student had 2 cores to average: 100 and 80. The student's average grade is (100+80)/2=90. An average grade of 90 corresponds to the letter grade O, 
so the calculate() method should return the character'O'.

Solution in Python3:

class Person:
	def __init__(self, firstName, lastName, idNumber):
		self.firstName = firstName
		self.lastName = lastName
		self.idNumber = idNumber
	def printPerson(self):
		print("Name:", self.lastName + ",", self.firstName)
		print("ID:", self.idNumber)

class Student(Person):
    #   Class Constructor
    #   
    #   Parameters:
    #   firstName - A string denoting the Person's first name.
    #   lastName - A string denoting the Person's last name.
    #   id - An integer denoting the Person's ID number.
    #   scores - An array of integers denoting the Person's test scores.
    #
    # Write your constructor here
    

    #   Function Name: calculate
    #   Return: A character denoting the grade.
    #
    # Write your function here

    def __init__(self, firstName, lastName, idNumber, scores):
        self.firstName = firstName
        self.lastName = lastName
        self.idNumber = idNumber
        self.scores = scores

    def calculate(self):
        self.ave = sum(self.scores)/numScores
        if self.ave >=90 and self.ave <= 100:
            return 'O'
        elif self.ave >= 80 and self.ave < 90:
            return 'E'
        elif self.ave >= 70 and self.ave < 80:
            return 'A'
        elif self.ave >= 55 and self.ave < 70:
            return 'P'
        elif self.ave >=  40 and self.ave < 55:
            return 'D'
        elif self.ave < 40:
            return 'T'


line = input().split()
firstName = line[0]
lastName = line[1]
idNum = line[2]
numScores = int(input()) # not needed for Python
scores = list( map(int, input().split()) )
s = Student(firstName, lastName, idNum, scores)
s.printPerson()
print("Grade:", s.calculate())

Sample Test Case 0:

Input (stdin)

    Heraldo Memelli 8135627

    2

    100 80

Your Output (stdout)

    Name: Memelli, Heraldo

    ID: 8135627

    Grade: O

Expected Output

    Name: Memelli, Heraldo

    ID: 8135627

    Grade: O
